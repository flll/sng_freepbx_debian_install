#_preseed_V1
#### 事前設定ファイルの内容 (bookworm用)
### ローカライゼーション
# 事前設定では、ロケールのみが言語、国、ロケールを設定します。
#d-i debian-installer/locale string ja_JP

# より柔軟に個別の値を事前設定することもできます。
d-i debian-installer/language string ja
d-i debian-installer/country string JP
d-i debian-installer/locale string ja_JP.UTF-8
# 生成する追加のロケールを指定することもできます。
d-i localechooser/supported-locales multiselect ja_JP.UTF-8, en_US.UTF-8

# キーボードの選択
d-i keyboard-configuration/xkb-keymap select jp
# d-i keyboard-configuration/toggle select 切り替えなし

### ネットワーク設定
# ネットワーク設定を完全に無効にします。これは、ネットワークに接続されていない
# デバイスでのCDROMインストールで、ネットワーク関連の質問、警告、
# 長時間のタイムアウトが煩わしい場合に便利です。
#d-i netcfg/enable boolean false

# netcfgは可能な場合、リンクが検出されたインターフェースを選択します。
# これにより、複数のインターフェースがある場合にリストを表示しません。
d-i netcfg/choose_interface select auto

# 特定のインターフェースを選択する場合:
#d-i netcfg/choose_interface select eth1

# リンク検出のタイムアウトを設定するには(デフォルトは3秒)。
# 値は秒単位で解釈されます。
#d-i netcfg/link_wait_timeout string 10

# DHCPサーバーの応答が遅く、待機してタイムアウトする場合、
# これが役立つかもしれません。
d-i netcfg/dhcp_timeout string 10
d-i netcfg/dhcpv6_timeout string 10

# 自動ネットワーク設定がデフォルトです。
# ネットワークを手動で設定したい場合は、この行と以下の静的ネットワーク設定の
# コメントを解除してください。
#d-i netcfg/disable_autoconfig boolean true

# DHCPサーバーがある場合とない場合の両方のシステムで事前設定ファイルを
# 動作させたい場合は、これらの行と以下の静的ネットワーク設定の
# コメントを解除してください。
#d-i netcfg/dhcp_failed note
#d-i netcfg/dhcp_options select 手動でネットワークを設定

# 静的ネットワーク設定
#
# IPv4の例
#d-i netcfg/get_ipaddress string 192.168.1.42
#d-i netcfg/get_netmask string 255.255.255.0
#d-i netcfg/get_gateway string 192.168.1.1
#d-i netcfg/get_nameservers string 192.168.1.1
#d-i netcfg/confirm_static boolean true
#
# IPv6の例
#d-i netcfg/get_ipaddress string fc00::2
#d-i netcfg/get_netmask string ffff:ffff:ffff:ffff::
#d-i netcfg/get_gateway string fc00::1
#d-i netcfg/get_nameservers string fc00::1
#d-i netcfg/confirm_static boolean true

# DHCPから割り当てられたホスト名とドメイン名は、ここで設定された値より
# 優先されます。ただし、値を設定しておくと、DHCPから値が来た場合でも
# 質問が表示されるのを防ぐことができます。
d-i netcfg/get_hostname string debian
d-i netcfg/get_domain string lll.fish

# DHCPサーバーが返す値やIPのリバースDNSエントリに関係なく、
# ホスト名を強制的に設定したい場合は、以下の行のコメントを解除して
# 調整してください。
d-i netcfg/hostname string debian

# 面倒なWEPキーダイアログを無効にします。
d-i netcfg/wireless_wep string
# 一部のISPがパスワードとして使用する変なDHCPホスト名。
#d-i netcfg/dhcp_hostname string radish

# ファームウェアの検索を完全に無効にする場合(つまり、インストール
# イメージで利用可能なファームウェアファイルやパッケージを使用しない):
#d-i hw-detect/firmware-lookup string never

# ネットワークやその他のハードウェアに非フリーのファームウェアが
# 必要な場合、インストーラーに常にそれを読み込むように設定できます。
# または、プロンプトを表示せずに無効にすることもできます。
#d-i hw-detect/load_firmware boolean true

### ネットワークコンソール
# SSHを介したリモートインストールのためにネットワークコンソール
# コンポーネントを使用する場合は、以下の設定を使用します。
# これは、インストールの残りを手動で行う予定がある場合にのみ意味があります。
#d-i anna/choose_modules string network-console
#d-i network-console/authorized_keys_url string http://10.0.0.1/openssh-key
#d-i network-console/password password r00tme
#d-i network-console/password-again password r00tme

### ミラー設定
# ミラープロトコル:
# ftpを選択した場合、mirror/countryの文字列を設定する必要はありません。
# ミラープロトコルのデフォルト値: http。
#d-i mirror/protocol string ftp
d-i mirror/country string manual
d-i mirror/http/hostname string ftp.jaist.ac.jp
d-i mirror/http/directory string /debian
d-i mirror/http/proxy string

# インストールするスイート
#d-i mirror/suite string testing
# インストーラーコンポーネントの読み込みに使用するスイート(オプション)
#d-i mirror/udeb/suite string testing

### アカウント設定
# (falseの場合)rootアカウントの作成をスキップ(通常のユーザーアカウントが
# sudoを使用できるようになります)。
d-i passwd/root-login boolean true
# (falseの場合)あるいは、通常のユーザーアカウントの作成をスキップします。
d-i passwd/make-user boolean true

# rootパスワード(平文)
#d-i passwd/root-password password r00tme
#d-i passwd/root-password-again password r00tme
# またはcrypt(3)ハッシュを使用して暗号化
d-i passwd/root-password-crypted password $5$X0u.8iHxH48r7cKK$hfBUCZrGBNIxFobtAgLxMfB.BqgkdfSB.WYX0TbYUV.

# 通常のユーザーアカウントを作成するには
d-i passwd/user-fullname string lll
d-i passwd/username string lll
# 通常のユーザーのパスワード(平文)
#d-i passwd/user-password password insecure
#d-i passwd/user-password-again password insecure
# またはcrypt(3)ハッシュを使用して暗号化
d-i passwd/user-password-crypted password $5$l0M8y1P/b7itFRJx$w7/DF7pJbmLKJp18pdiZLcAiES3sfLr.6GWJ8umVmVC
# デフォルトの代わりに指定したUIDで最初のユーザーを作成
#d-i passwd/user-uid string 1010

# ユーザーアカウントは標準の初期グループに追加されます。
# これを上書きするには:
d-i passwd/user-default-groups string sudo docker

### 時計とタイムゾーンの設定
# ハードウェア時計をUTCに設定するかどうかを制御
d-i clock-setup/utc boolean true

# $TZの有効な値については、/usr/share/zoneinfo/の内容を参照
d-i time/zone string Asia/Tokyo

# インストール中にNTPを使用して時計を設定するかどうかを制御
d-i clock-setup/ntp boolean true
# 使用するNTPサーバー。デフォルトはほとんどの場合適切です。
d-i clock-setup/ntp-server string time.cloudflare.com






### パーティション分割
## パーティション分割の例
# システムに空き領域がある場合、その領域のみをパーティション分割することを
# 選択できます。これは、partman-auto/method(以下)が設定されていない場合
# のみ有効です。
#d-i partman-auto/init_automatically_partition select biggest_free

# あるいは、パーティション分割するディスクを指定できます。システムに
# 1つのディスクしかない場合、インストーラーはデフォルトでそれを使用
# しますが、それ以外の場合はデバイス名を従来の非devfs形式で指定する
# 必要があります(例: /dev/sdaであり、/dev/discs/disc0/discではありません)。
# 例えば、最初のSCSI/SATAハードディスクを使用する場合:
#d-i partman-auto/disk string /dev/sda
# さらに、使用する方法を指定する必要があります。
# 現在利用可能な方法:
# - regular: アーキテクチャの通常のパーティションタイプを使用
# - lvm:    ディスクのパーティション分割にLVMを使用
# - crypto: 暗号化パーティション内でLVMを使用
d-i partman-auto/method string crypto

# LVMボリュームグループに使用する容量を定義できます。
# 単位付きのサイズ(例: 20 GB)、空き容量の割合、または'max'キーワードを
# 使用できます。
d-i partman-auto-lvm/guided_size string max

# 自動的にパーティション分割されるディスクの1つに古いLVM設定が
# 含まれている場合、ユーザーは通常警告を受けます。これを事前に
# 回避することができます...
d-i partman-lvm/device_remove_lvm boolean true
# 既存のソフトウェアRAIDアレイにも同様に適用されます:
d-i partman-md/device_remove_md boolean true
# そして、LVMパーティションの書き込み確認も同様です。
d-i partman-lvm/confirm boolean true
d-i partman-lvm/confirm_nooverwrite boolean true

# 3つの定義済みパーティション分割レシピから1つを選択できます:
# - atomic: すべてのファイルを1つのパーティションに
# - home:   /homeパーティションを分割
# - multi:  /home、/var、/tmpパーティションを分割
d-i partman-auto/choose_recipe select atomic

# または独自のレシピを提供...
# d-i環境にレシピファイルを取り込む方法がある場合は、
# それを指定するだけです。
#d-i partman-auto/expert_recipe_file string /hd-media/recipe

# そうでない場合は、1つの(論理)行に完全なレシピを記述できます。
# この例では小さな/bootパーティション、適切なスワップ、
# 残りの容量をルートパーティションに使用します:
#d-i partman-auto/expert_recipe string                         \
#      boot-root ::                                            \
#              40 50 100 ext3                                  \
#                      $primary{ } $bootable{ }                \
#                      method{ format } format{ }              \
#                      use_filesystem{ } filesystem{ ext3 }    \
#                      mountpoint{ /boot }                     \
#              .                                               \
#              500 10000 1000000000 ext3                       \
#                      method{ format } format{ }              \
#                      use_filesystem{ } filesystem{ ext3 }    \
#                      mountpoint{ / }                         \
#              .                                               \
#              64 512 300% linux-swap                          \
#                      method{ swap } format{ }                \
#              .

# 完全なレシピ形式は、'debian-installer'パッケージに含まれる
# partman-auto-recipe.txtファイル、またはD-Iソースリポジトリで
# 確認できます。これには、ファイルシステムラベル、ボリューム
# グループ名、ボリュームグループに含める物理デバイスなどの
# 設定方法も記載されています。

## EFI用パーティション分割
# システムがEFIパーティションを必要とする場合、上記のレシピの
# 最初の要素として以下のような内容を追加できます:
#               538 538 1075 free                              \
#                      $iflabel{ gpt }                         \
#                      $reusemethod{ }                         \
#                      method{ efi }                           \
#                      format{ }                               \
#               .                                              \
#
# 上記の断片はamd64アーキテクチャ用です。他のアーキテクチャでは
# 詳細が異なる場合があります。D-Iソースリポジトリの'partman-auto'
# パッケージに、参考にできる例があるかもしれません。

# これにより、上記のいずれかの方法で指示した内容に従って、
# partmanが確認なしで自動的にパーティション分割を行います。
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

# UEFIブートを強制('BIOSの互換性'は失われます)。デフォルト: false
d-i partman-efi/non_efi_system boolean true
# パーティションテーブルがGPTであることを確認 - EFIに必要です
d-i partman-partitioning/choose_label select gpt
d-i partman-partitioning/default_label string gpt

# ディスク暗号化が有効な場合、事前にパーティションの消去をスキップ
d-i partman-auto-crypto/erase_disks boolean false


# これにより、partmanが確認なしで自動的にパーティション分割を行います。
d-i partman-md/confirm boolean true
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

## パーティションのマウント方法の制御
# デフォルトではUUIDでマウントしますが、"traditional"を選択して
# 従来のデバイス名を使用するか、"label"を選択してUUIDにフォール
# バックする前にファイルシステムラベルを試すこともできます。
d-i partman/mount_style select uuid







### ベースシステムのインストール
# APTに推奨パッケージをデフォルトでインストールしないように設定します。
# このオプションを使用すると不完全なシステムになる可能性があり、
# 経験豊富なユーザーのみが使用すべきです。
#d-i base-installer/install-recommends boolean false

# インストールするカーネルイメージ(メタ)パッケージ。"none"を使用すると
# カーネルがインストールされません。
d-i base-installer/kernel/image string linux-image-6.1.0-25-amd64

### APTの設定
# 追加のインストールメディアをスキャンするかどうかを選択します
# (デフォルト: false)。
d-i apt-setup/cdrom/set-first boolean false
# 非フリーのファームウェアをインストールするかどうかを選択できます。
d-i apt-setup/non-free-firmware boolean true
# 非フリーソフトウェアとcontribソフトウェアをインストールするかどうかを選択できます。
d-i apt-setup/non-free boolean true
d-i apt-setup/contrib boolean true
# インストールされたシステムでDVD/BDインストールイメージのsources.listエントリを
# 無効にしたい場合は、以下の行のコメントを解除してください
# (netinstやCDイメージのエントリは、この設定に関係なく無効化されます)。
#d-i apt-setup/disable-cdrom-entries boolean true
# ネットワークミラーを使用したくない場合は、これをコメント解除してください。
#d-i apt-setup/use_mirror boolean false
# 使用する更新サービスを選択し、使用するミラーを定義します。
# 以下の値は通常のデフォルトです。
d-i apt-setup/services-select multiselect security, updates
d-i apt-setup/security_host string security.debian.org
# アップデートの優先度
d-i apt-setup/security/priority string high
# 追加リポジトリ、local[0-9]が利用可能
#d-i apt-setup/local0/repository string \
#       http://local.server/debian stable main
#d-i apt-setup/local0/comment string ローカルサーバー
# deb-srcラインを有効にする
#d-i apt-setup/local0/source boolean true
# ローカルリポジトリの公開鍵のURL。キーを提供しないとaptは認証されていない
# リポジトリについて警告し、sources.listの行はコメントアウトされたままになります。
#d-i apt-setup/local0/key string http://local.server/key
# または、キーファイルの内容をbase64エンコード(`base64 -w0`)して
# インラインで提供することもできます:
#d-i apt-setup/local0/key string base64://LS0tLS1CRUdJTiBQR1AgUFVCTElDIEtFWSBCTE9DSy0tLS0tCi4uLgo=
# キーファイルの内容がASCIIアーマー形式かどうかチェックされます。
# その場合は".asc"拡張子で保存され、そうでない場合は'.gpg'拡張子が付きます。
# "keybox database"形式は現在サポートされていません。
# (apt-setupのソースのgenerators/60localを参照)


# local0: JAISTミラー（メイン）
d-i apt-setup/local0/repository string \
    http://ftp.jaist.ac.jp/debian/ bookworm main non-free-firmware
d-i apt-setup/local0/comment string JAIST Debian mirror
d-i apt-setup/local0/source boolean true

# local1: セキュリティアップデート
d-i apt-setup/local1/repository string \
    http://security.debian.org/debian-security bookworm-security main non-free-firmware
d-i apt-setup/local1/comment string Debian Security Updates
d-i apt-setup/local1/source boolean true

# local2: bookworm-updates
d-i apt-setup/local2/repository string \
    http://ftp.jaist.ac.jp/debian/ bookworm-updates main non-free-firmware
d-i apt-setup/local2/comment string Debian Updates
d-i apt-setup/local2/source boolean true

# local3: non-free追加
d-i apt-setup/local3/repository string \
    http://ftp.debian.org/debian stable non-free-firmware non-free main
d-i apt-setup/local3/comment string Debian Non-Free
d-i apt-setup/local3/source boolean true



# デフォルトでは、インストーラーは既知のgpgキーを使用してリポジトリを
# 認証する必要があります。この設定を使用して認証を無効にできます。
# 警告: 安全ではなく、推奨されません。
#d-i debian-installer/allow_unauthenticated boolean true

# i386用のマルチアーチ設定を追加する場合は、これをコメント解除
#d-i apt-setup/multiarch string i386

### パッケージの選択
tasksel tasksel/first multiselect standard, desktop, gnome-desktop

# または、taskelダイアログを全く表示せず、パッケージをインストールしない:
#d-i pkgsel/run_tasksel boolean false

# インストールする追加パッケージ
d-i pkgsel/include string \
    whois \
    vim \
    sudo \
    nano \
    curl \
    git \
    htop \
    tmux \
    net-tools \
    tree \
    unzip \
    wget \
    build-essential \
    ca-certificates \
    jq \
    iotop \
    nmap \
    screen \
    python3 \
    python3-pip \
    python3-venv
# debootstrap後にパッケージをアップグレードするかどうか。
# 許可される値: none, safe-upgrade, full-upgrade
d-i pkgsel/upgrade select full-upgrade

# インストールしたソフトウェアと使用しているソフトウェアについて
# システムが報告するかどうかを選択できます。デフォルトでは報告しませんが、
# 報告を送ることでプロジェクトが最も人気のあるソフトウェアを判断し、
# 最初のCD/DVDに含めるべきソフトウェアを決定するのに役立ちます。
popularity-contest popularity-contest/participate boolean true

### ブートローダーのインストール
# Grubは(x86用の)ブートローダーです。

# これは比較的安全に設定できます。マシンに他のOSが検出されない場合、
# 自動的にUEFIパーティション/ブートレコードにgrubをインストールします。
d-i grub-installer/only_debian boolean true

# (true)これにより、他のOSも見つかった場合にgrub-installerがUEFIパーティション/
# ブートレコードにインストールしますが、他のOSを起動できない可能性があるため、
# より安全性が低くなります。
d-i grub-installer/with_other_os boolean false

# 特にUSBスティックの可能性があるため、プライマリドライブの場所を
# 一般的に安全に判断することができないため、これを指定する必要があります:
#d-i grub-installer/bootdev string /dev/sda
# プライマリデバイスにインストールするには(USBスティックでないと仮定):
#d-i grub-installer/bootdev string default

# あるいは、UEFIパーティション/ブートレコード以外の場所にインストールしたい場合は、
# これらの行のコメントを解除して編集してください:
#d-i grub-installer/only_debian boolean false
#d-i grub-installer/with_other_os boolean false
#d-i grub-installer/bootdev string (hd0,1)
# 複数のディスクにgrubをインストールするには:
#d-i grub-installer/bootdev string (hd0,1) (hd1,1) (hd2,1)

# grubのオプションパスワード、平文で:
#d-i grub-installer/password password r00tme
#d-i grub-installer/password-again password r00tme
# またはMD5ハッシュを使用して暗号化、grub-md5-crypt(8)を参照。
d-i grub-installer/password-crypted password grub.pbkdf2.sha512.10000.28D8834136DFFC1F235C662E75073D72C4D7FDE5CED1D8664A80696E74BA9C73963CFE36DECBD79BF0A3D112BB1CE6E4A36BBEEE6686A7A6879CCCB64AC0A7C3.BDB5B9B97DACA52DEA390E6305137B0BC7752DC22311D3EA9B08466B2E70BA30A720C48967E075386C345E855850CAFFFEFF5BFD4E628C490F966DC5894D79C6

# インストールされたシステムに追加のブートパラメータを追加するには
# 以下のオプションを使用します(ブートローダーインストーラーが
# サポートしている場合)。
# 注: インストーラーに渡されたオプションは自動的に追加されます。
#d-i debian-installer/add-kernel-opts string nousb

### インストールの完了
# シリアルコンソールからのインストール中、通常の仮想コンソール
# (VT1-VT6)は/etc/inittabで通常無効化されます。次の行の
# コメントを解除するとこれを防ぎます。
#d-i finish-install/keep-consoles boolean true

# インストールが完了したという最後のメッセージを表示しないようにします。
d-i finish-install/reboot_in_progress note

# 再起動時にCDを排出しないようにします。
# 場合によっては便利です。
#d-i cdrom-detect/eject boolean false

# インストーラーを終了時にシャットダウンしますが、インストールされた
# システムには再起動しません。
#d-i debian-installer/exit/halt boolean true
# これにより、単なる停止ではなく、マシンの電源が切れます。
d-i debian-installer/exit/poweroff boolean true

### 他のパッケージの事前設定
# インストールするソフトウェアによって、またはインストールプロセス中に
# 問題が発生した場合、他の質問が表示される可能性があります。
# これらも事前設定できます。インストール中に表示される可能性のある
# すべての質問のリストを取得するには、インストールを実行し、
# 以下のコマンドを実行します:
#   debconf-get-selections --installer > ファイル
#   debconf-get-selections >> ファイル

#### 高度なオプション
### インストール中のカスタムコマンドの実行
# d-iの事前設定は本質的に安全ではありません。インストーラーには
# バッファオーバーフローや、この事前設定ファイルのような値の
# 悪用の試みをチェックする機能はありません。信頼できる場所からの
# 事前設定ファイルのみを使用してください！それを強調し、また
# 一般的に便利なため、ここではインストーラー内で任意のシェル
# コマンドを自動的に実行する方法を示します。

# この最初のコマンドは、事前設定の読み込み後できるだけ早く
# 実行されます。
# d-i preseed/early_command string apt update; \
#     apt install ca-certificates curl; \
#     install -m 0755 -d /target/etc/apt/keyrings; \
#     curl -fsSL https://download.docker.com/linux/debian/gpg -o /target/etc/apt/keyrings/docker.asc; \
#     chmod a+r /target/etc/apt/keyrings/docker.asc
# このコマンドはパーティショナーが開始する直前に実行されます。
# ディスクの状態に依存する動的なパーティショナーの事前設定に
# 便利かもしれません(preseed/early_commandが実行される時点では
# 見えない可能性があります)。
# /dev/disk/by-id/*311809I*と一致するデバイスを見つけて、
# partman-auto/diskに設定します。
d-i partman/early_command \
       string debconf-set partman-auto/disk "dev/$(ls -l /dev/disk/by-id/*311809I* | cut -d'/' -f7 | head -n1)"
# このコマンドはインストールが終わる直前に実行されますが、
# まだ使用可能な/targetディレクトリがある時点です。/targetに
# chrootして直接使用するか、apt-installやin-targetコマンドを
# 使用してパッケージを簡単にインストールしたり、ターゲット
# システムでコマンドを実行したりできます。
#d-i preseed/late_command string apt-install zsh; in-target chsh -s /bin/zsh
d-i preseed/late_command string apt-install fish; \
        in-target chsh -s /bin/fish; \
        in-target usermod -aG sudo lll; \

